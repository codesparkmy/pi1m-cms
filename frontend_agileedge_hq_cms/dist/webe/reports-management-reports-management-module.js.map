{"version":3,"sources":["webpack:///./src/app/routes/reports-management/reports-management.module.ts","webpack:///./src/app/routes/reports-management/reports-management/reports-management.component.html","webpack:///./src/app/routes/reports-management/reports-management/reports-management.component.scss","webpack:///./src/app/routes/reports-management/reports-management/reports-management.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACsD;AAC/F,6EAA6E;AACtB;AACG;AAC1D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2GAA0B,EAAE;CAGpD,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QAVnC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2GAA0B,CAAC;YAC1C,OAAO,EAAE;gBACP,kEAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE;gBACP,4DAAY;aACf;SACA,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;ACpBpC,qmBAAqmB,YAAY,woBAAwoB,cAAc,ouFAAouF,sBAAsB,kYAAkY,SAAS,GAAG,kBAAkB,6yCAA6yC,sBAAsB,u2EAAu2E,oCAAoC,KAAK,2BAA2B,aAAa,2BAA2B,sBAAsB,2BAA2B,yBAAyB,2BAA2B,0BAA0B,2BAA2B,0BAA0B,2BAA2B,iBAAiB,ivCAAivC,oCAAoC,KAAK,2BAA2B,WAAW,2BAA2B,gBAAgB,2BAA2B,kBAAkB,2BAA2B,WAAW,2BAA2B,WAAW,2BAA2B,kCAAkC,2BAA2B,YAAY,2BAA2B,aAAa,8uCAA8uC,oCAAoC,KAAK,2BAA2B,iBAAiB,2BAA2B,eAAe,2BAA2B,iBAAiB,2BAA2B,eAAe,2BAA2B,kBAAkB,2BAA2B,cAAc,2BAA2B,eAAe,grCAAgrC,oCAAoC,KAAK,2BAA2B,WAAW,2BAA2B,WAAW,2BAA2B,UAAU,2BAA2B,oCAAoC,2BAA2B,iBAAiB,2BAA2B,gCAAgC,umCAAumC,sCAAsC,KAAK,6BAA6B,WAAW,6BAA6B,aAAa,8iCAA8iC,sCAAsC,KAAK,6BAA6B,WAAW,6BAA6B,aAAa,kvCAAkvC,oCAAoC,KAAK,2BAA2B,aAAa,2BAA2B,uBAAuB,2BAA2B,oBAAoB,2BAA2B,mBAAmB,2BAA2B,sBAAsB,2BAA2B,sBAAsB,+hDAA+hD,sEAAsE,KAAK,cAAc,2BAA2B,kBAAkB,2BAA2B,oBAAoB,2BAA2B,qBAAqB,2BAA2B,uBAAuB,2BAA2B,2BAA2B,2BAA2B,6BAA6B,2BAA2B,wBAAwB,2BAA2B,0BAA0B,iiDAAiiD,sEAAsE,KAAK,cAAc,2BAA2B,kBAAkB,2BAA2B,qBAAqB,2BAA2B,qBAAqB,2BAA2B,wBAAwB,2BAA2B,2BAA2B,2BAA2B,8BAA8B,2BAA2B,wBAAwB,2BAA2B,2BAA2B,4uDAA4uD,sEAAsE,KAAK,cAAc,2BAA2B,sBAAsB,2BAA2B,wBAAwB,2BAA2B,uBAAuB,2BAA2B,4BAA4B,2BAA2B,yBAAyB,2BAA2B,2BAA2B,2BAA2B,0BAA0B,2BAA2B,+BAA+B,2BAA2B,yBAAyB,2BAA2B,2BAA2B,2BAA2B,0BAA0B,2BAA2B,+BAA+B,mhDAAmhD,oCAAoC,KAAK,2BAA2B,YAAY,2BAA2B,iBAAiB,2BAA2B,eAAe,2BAA2B,kBAAkB,2BAA2B,WAAW,2BAA2B,qBAAqB,6lBAA6lB,oCAAoC,KAAK,2BAA2B,kBAAkB,2BAA2B,0BAA0B,2BAA2B,WAAW,2BAA2B,gBAAgB,2BAA2B,cAAc,itBAAitB,oCAAoC,KAAK,2BAA2B,aAAa,2BAA2B,iBAAiB,iPAAiP,qBAAqB,8BAA8B,UAAU,2BAA2B,eAAe,2BAA2B,0BAA0B,quBAAquB,sCAAsC,KAAK,6BAA6B,WAAW,6DAA6D,oBAAoB,iFAAiF,yFAAyF,6I;;;;;;;;;;;ACA344B,gGAAgG,0GAA0G,gBAAgB,wBAAwB,eAAe,mBAAmB,8BAA8B,EAAE,MAAM,uBAAuB,8BAA8B,EAAE,MAAM,uBAAuB,8BAA8B,2BAA2B,yCAAyC,uBAAuB,EAAE,QAAQ,sCAAsC,4BAA4B,EAAE,SAAS,+BAA+B,EAAE,+CAA+C,m2E;;;;;;;;;;;;;;;;;;;;;;;;ACCjnB;AAC0B;AAE9B;AACmC;AACxB;AACM;AAEQ;AAGrC;AAM7C;IA4HE,oCACS,OAAgB,EAChB,GAAqB,EACpB,KAAqB;QAH/B,iBAaC;QAZQ,YAAO,GAAP,OAAO,CAAS;QAChB,QAAG,GAAH,GAAG,CAAkB;QACpB,UAAK,GAAL,KAAK,CAAgB;QA5HxB,aAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAMjD,eAAU,GAAG,EAAE,CAAC;QAGhB,WAAM,GAAQ,IAAI,CAAC;QAEnB,eAAU,GAAY,KAAK,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAMzB,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAE3B,UAAK,GAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;QAG3C,iBAAY,GAAG;YACpB;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,iCAAiC;gBACvC,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,sBAAsB;aACjC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,+BAA+B;gBACrC,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,sBAAsB;aACjC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,iCAAiC;gBACvC,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,iBAAiB;aAC5B;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,qCAAqC;gBAC3C,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,qBAAqB;aAChC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,0BAA0B;gBAChC,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,wBAAwB;aACnC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,0BAA0B;gBAChC,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,uBAAuB;aAClC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,oCAAoC;gBAC1C,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,+BAA+B;aAC1C;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,yCAAyC;gBAC/C,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,uBAAuB;aAClC;YACD;gBACE,EAAE,EAAE,GAAG;gBACP,IAAI,EAAE,uCAAuC;gBAC7C,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,oBAAoB;aAC/B;YACD;gBACE,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,wCAAwC;gBAC9C,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,6BAA6B;aACxC;YACD;gBACE,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,gBAAgB;aAC3B;SACF;QAEM,uBAAkB,GAAG,EAAE,CAAC;QAExB,mBAAc,GAAG,EAAE,CAAC;QAEpB,gBAAW,GAAG,EAAE,CAAC;QAEjB,kBAAa,GAAG,EAAE,CAAC;QAEnB,mBAAc,GAAG,EAAE,CAAC;QAEpB,qBAAgB,GAAG,EAAE,CAAC;QAEtB,2BAAsB,GAAG,EAAE,CAAC;QAE5B,yBAAoB,GAAG,EAAE,CAAC;QAE1B,wBAAmB,GAAG,EAAE,CAAC;QAEzB,2BAAsB,GAAG,EAAE,CAAC;QAE5B,gBAAW,GAAG,EAAE,CAAC;QAEjB,gBAAW,GAAG,EAAE,CAAC;QAEjB,iBAAY,GAAG,EAAE,CAAC;QA+dzB,aAAQ,GAAG;YACT,IAAI,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,IAAI,GAAG;gBAAE,OAAO,UAAU,CAAC;YAChE,OAAO,WAAW,CAAC;QACrB,CAAC;QA5dC,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE;QACf,0CAA0C;QAC1C,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,oCAAoC;IACtC,CAAC;IACD,6CAAQ,GAAR;QACE,OAAO,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/C,CAAC;IACD,oDAAe,GAAf;QACE,qHAAqH;QACrH,8FAA8F;QAC9F,WAAW;QACX,oCAAoC;QACpC,IAAI;IACN,CAAC;IACD,6CAAQ,GAAR;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC/B,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iDAAY,GAAZ,UAAa,IAAI;QAAjB,iBAqCC;QApCC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;YAC/B,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC/B,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;aACxB;;gBACI,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;QACF,oBAAoB;QACpB,0BAA0B;QAC1B,iCAAiC;QACjC,4BAA4B;QAC5B,0CAA0C;QAC1C,+BAA+B;QAC/B,4BAA4B;QAC5B,IAAI;QACJ,oCAAoC;QACpC,0BAA0B;QAC1B,wDAAwD;QACxD,IAAI;QACJ,oCAAoC;QACpC,6BAA6B;QAC7B,IAAI;QACJ,oCAAoC;QACpC,sCAAsC;QACtC,4BAA4B;QAC5B,sCAAsC;QACtC,+BAA+B;QAC/B,WAAW;QACX,gBAAgB;QAChB,IAAI;QACJ,2BAA2B;IAC7B,CAAC;IAED,gDAAW,GAAX;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,2CAA2C;YAC3C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAqB,GAArB,UAAsB,IAAI;QAA1B,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,wBAAwB,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QACjC,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAa,GAAb,UAAc,IAAI,EAAE,GAAI;QACtB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,EAAE,GAAG,EAAE,CAAC;QACZ,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;YAC3B,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE;YACnC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B;aACI;YACH,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YACrB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;SAClB;QACD,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,IAAI,CAAC,QAAQ;SAC1B;IACH,CAAC;IAED,yDAAoB,GAApB,UAAqB,IAAI;QAAzB,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,wBAAwB,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yDAAoB,GAApB,UAAqB,IAAI;QAAzB,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,iBAAiB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;QAC1C,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAe,GAAf,UAAgB,IAAI;QAApB,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,sBAAsB,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAAsB,GAAtB,UAAuB,IAAI;QAA3B,iBAwBC;QAvBC,IAAI,OAAO,GAAG;YACZ,MAAM,EAAE,IAAI,CAAC,UAAU;YACvB,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,QAAQ,EAAE,IAAI,CAAC,MAAM;YACrB,UAAU,EAAE,IAAI,CAAC,QAAQ;SAC1B;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,WAAW,CAAC;QACrD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,IAAI,OAAO,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC5B,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;aACvD;iBAAM,IAAI,OAAO,CAAC,IAAI,IAAI,SAAS;gBAAE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;iBACtE;gBACH,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;gBACtD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;aACtC;QACH,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAmB,GAAnB,UAAoB,IAAI;QAAxB,iBAgBC;QAfC,IAAI,OAAO,GAAG;YACZ,UAAU,EAAE,IAAI,CAAC,QAAQ;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,0BAA0B,CAAC;QACpE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,cAAc,GAAG,IAAI;QAC5B,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,kEAA6B,GAA7B,UAA8B,IAAI;QAAlC,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,oBAAoB,CAAC;QAC9D,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACrC,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAqB,GAArB,UAAsB,IAAI;QAA1B,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,kBAAkB,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACnC,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uDAAkB,GAAlB,UAAmB,IAAI;QAAvB,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,iBAAiB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAClC,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAA2B,GAA3B,UAA4B,IAAI;QAAhC,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,wBAAwB,CAAC;QAClE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACnC,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAc,GAAd,UAAe,IAAI;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,mDAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,yEAAY,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,yEAAY,CAAC,OAAO,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,+EAAe,CAAC,QAAQ,CAAC;QAClD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE;QACxB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,cAAI;YAC5C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,EAAE,UAAC,GAAG;YACL,sEAAsE;YACtE,6BAA6B;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,sBAAsB;IACtB,2BAA2B;IAC3B,gBAAgB;IAChB,uCAAuC;IACvC,mCAAmC;IACnC,8BAA8B;IAC9B,MAAM;IACN,+DAA+D;IAC/D,+CAA+C;IAC/C,gEAAgE;IAChE,8BAA8B;IAC9B,6BAA6B;IAC7B,wDAAwD;IACxD,8BAA8B;IAC9B,6CAA6C;IAC7C,kBAAkB;IAClB,8BAA8B;IAC9B,6EAA6E;IAC7E,oCAAoC;IACpC,QAAQ;IACR,IAAI;IACJ,8CAAS,GAAT,UAAU,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC;IAC7B,CAAC;IAED,oBAAoB;IACpB,0BAA0B;IAC1B,gBAAgB;IAChB,uCAAuC;IACvC,mCAAmC;IACnC,8BAA8B;IAC9B,MAAM;IACN,yBAAyB;IACzB,+DAA+D;IAC/D,+CAA+C;IAC/C,8DAA8D;IAC9D,8BAA8B;IAC9B,6BAA6B;IAC7B,wDAAwD;IACxD,4BAA4B;IAE5B,kBAAkB;IAClB,4BAA4B;IAC5B,6EAA6E;IAC7E,oCAAoC;IACpC,QAAQ;IACR,IAAI;IACJ,uBAAuB;IACvB,gBAAgB;IAChB,uCAAuC;IACvC,mCAAmC;IACnC,8BAA8B;IAC9B,MAAM;IACN,4BAA4B;IAC5B,+DAA+D;IAC/D,+CAA+C;IAC/C,kEAAkE;IAClE,8BAA8B;IAC9B,6BAA6B;IAC7B,wDAAwD;IACxD,+BAA+B;IAE/B,kBAAkB;IAClB,+BAA+B;IAC/B,6EAA6E;IAC7E,oCAAoC;IACpC,QAAQ;IACR,IAAI;IACJ,uBAAuB;IACvB,4BAA4B;IAC5B,gBAAgB;IAChB,uCAAuC;IACvC,mCAAmC;IACnC,8BAA8B;IAC9B,gDAAgD;IAChD,MAAM;IACN,qBAAqB;IACrB,+DAA+D;IAC/D,+CAA+C;IAC/C,8DAA8D;IAC9D,8BAA8B;IAC9B,6BAA6B;IAC7B,wDAAwD;IACxD,8BAA8B;IAC9B,gDAAgD;IAChD,kBAAkB;IAClB,+BAA+B;IAE/B,6EAA6E;IAC7E,oCAAoC;IACpC,QAAQ;IACR,IAAI;IACJ,qEAAqE;IACrE,oDAAoD;IACpD,iCAAiC;IACjC,oEAAoE;IACpE,iCAAiC;IACjC,8BAA8B;IAC9B,6BAA6B;IAC7B,MAAM;IACN,IAAI;IACJ,mEAAmE;IACnE,oDAAoD;IACpD,+BAA+B;IAC/B,iEAAiE;IACjE,4BAA4B;IAC5B,6BAA6B;IAC7B,MAAM;IACN,+BAA+B;IAE/B,IAAI;IAEJ,+DAA0B,GAA1B,UAA2B,QAAQ,EAAE,KAAK;QAA1C,iBA4BC;QA3BC,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnB,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtD,IAAM,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,cAAI;gBACtC,aAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,UAAC,WAAW,EAAE,GAAG;oBACxC,gDAAgD;oBAChD,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9C,OAAO,WAAW,CAAC;gBACrB,CAAC,EAAE,EAAE,CAAC;YAJN,CAIM,CACP,CAAC;YACF,IAAI,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC;YACzB,IAAI,GAAG,GAAG,IAAI,CAAC,0BAA0B,CAAC;gBACxC,IAAI,EAAE,YAAY;aACnB,CAAC,CAAC;YACH,IAAI,GAAG,IAAI,IAAI;gBAAE,OAAO;YAExB,QAAQ,GAAG,KAAK,GAAG,MAAM,CAAC;YAE1B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE;gBAClC,GAAG,GAAG,8BAA8B,GAAG,GAAG,CAAC;aAC5C;YACD,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;YAEtB,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;IACH,CAAC;IAED,+CAAU,GAAV,UAAW,KAAK;QACd,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,+DAA0B,GAA1B,UAA2B,IAAI;QAC7B,IAAI,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,eAAe,EAAE,aAAa,EAAE,IAAI,CAAC;QAE5D,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC;QACzB,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChC,OAAO,IAAI,CAAC;SACb;QAED,eAAe,GAAG,IAAI,CAAC,eAAe,IAAI,GAAG,CAAC;QAC9C,aAAa,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;QAE3C,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,GAAG,EAAE,CAAC;QACZ,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACrC,MAAM,IAAI,aAAa,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI;YACzB,GAAG,GAAG,CAAC,CAAC;YACR,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG;gBACxB,IAAI,GAAG,GAAG,CAAC;oBAAE,MAAM,IAAI,eAAe,CAAC;gBAEvC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpB,GAAG,EAAE,CAAC;YACR,CAAC,CAAC,CAAC;YACH,MAAM,IAAI,aAAa,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;IAOD,6CAAQ,GAAR,UAAS,KAAK;QACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC3C,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC3C,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;gBAC/B,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK;YACzB,CAAC,CAAC;YACF,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,EAAE,CAAC,eAAe,EAAE,CAAC;YACrB,EAAE,CAAC,sBAAsB,EAAE,CAAC;YAC5B,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACjC;aAAM,IAAI,KAAK,IAAI,GAAG,EAAE;YACvB,MAAM,CAAC,eAAe,EAAE,CAAC;YACzB,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAO;gBAC/B,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK;YACzB,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,EAAE,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxC,EAAE,CAAC,sBAAsB,EAAE,CAAC;YAC5B,MAAM,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,sBAAsB,EAAE,CAAC;SACjC;IACH,CAAC;IAtnB2C;QAA3C,+DAAS,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,0DAAQ,EAAE,CAAC;wEAAY,0DAAQ;iEAAC;IAEtB;QAAzC,+DAAS,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,0DAAQ,EAAE,CAAC;wEAAU,0DAAQ;+DAAC;IAPjD,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,oKAAkD;;SAEnD,CAAC;+EA8HkB,uFAAO;YACX,iGAAgB;YACb,8DAAc;OA/HpB,0BAA0B,CA6nBtC;IAAD,iCAAC;CAAA;AA7nBsC","file":"reports-management-reports-management-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { ReportsManagementComponent } from './reports-management/reports-management.component';\r\n// import { LeaveCreatComponent } from './leave-creat/leave-creat.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nconst routes: Routes = [\r\n  { path: '', component: ReportsManagementComponent },\r\n  // { path: 'creat', component: LeaveCreatComponent },\r\n\r\n];\r\n@NgModule({\r\n  declarations: [ReportsManagementComponent],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n]\r\n})\r\nexport class ReportsManagementModule { }\r\n\r\n","module.exports = \"<form [formGroup]=\\\"reportForm\\\" #f=\\\"ngForm\\\">\\r\\n  <div class=\\\"row mt-4 form-group\\\">\\r\\n    <div class=\\\"col-md-12 col-sm-12\\\">\\r\\n      <h4 class=\\\" header-titel\\\">Reports</h4>\\r\\n    </div>\\r\\n    <div [ngClass]=\\\"getClass()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Select Report Type</label>\\r\\n        <select class=\\\" form-control\\\" formControlName=\\\"summaryType\\\" (change)=\\\"getEvent($event.target.value)\\\">\\r\\n          <option selected value=\\\"\\\">Choose Summary</option>\\r\\n          <option *ngFor=\\\"let item of reportsArray\\\" [value]=\\\"item?.id\\\">\\r\\n            {{item?.name}}\\r\\n          </option>\\r\\n        </select>\\r\\n        <span *ngIf=\\\"reportForm.get('summaryType').hasError('required') && reportForm.get('summaryType').touched\\\"\\r\\n          class=\\\"text-danger text-12\\\">Report Type Field required</span>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\" *ngIf=\\\"f.form.value.summaryType == '4'\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Course</label>\\r\\n        <select class=\\\"form-control\\\" formControlName=\\\"courseId\\\">\\r\\n          <option selected value=\\\"\\\">Choose Training</option>\\r\\n          <option *ngFor=\\\"let item of trainingList\\\" [value]=\\\"item?.id\\\">\\r\\n            {{item?.course}}\\r\\n          </option>\\r\\n        </select>\\r\\n        <span *ngIf=\\\"reportForm.get('courseId').hasError('required') && reportForm.get('courseId').touched\\\"\\r\\n          class=\\\"text-danger text-12\\\">Course is Required</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"row align-items-end\\\">\\r\\n      <div class=\\\"col-md-3 col-xs-6\\\" *ngIf=\\\"!(f.form.value.summaryType == '4' || f.form.value.summaryType == '5' )\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Period</label>\\r\\n          <select formControlName=\\\"period\\\" class=\\\"form-control\\\">\\r\\n            <option value=\\\"\\\" selected>Choose type</option>\\r\\n            <option value=\\\"daily\\\">Daily</option>\\r\\n            <option value=\\\"monthly\\\">Monthly</option>\\r\\n            <option value=\\\"yearly\\\">Yearly</option>\\r\\n          </select>\\r\\n          <span *ngIf=\\\"reportForm.get('period').hasError('required') && reportForm.get('period').touched\\\"\\r\\n            class=\\\"text-danger text-12\\\">Select Type\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-xs-12\\\" *ngIf=\\\"f.form.value.summaryType == '5'\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Type</label>\\r\\n          <select formControlName=\\\"incomeType\\\" class=\\\"form-control\\\">\\r\\n            <option value=\\\"\\\" selected>Choose type</option>\\r\\n            <option value=\\\"all\\\">All</option>\\r\\n            <option value=\\\"income\\\">Income</option>\\r\\n            <option value=\\\"expense\\\">Expense</option>\\r\\n          </select>\\r\\n          <span *ngIf=\\\"reportForm.get('incomeType').hasError('required') && reportForm.get('incomeType').touched\\\"\\r\\n            class=\\\"text-danger text-12\\\">Select Type\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-xs-6\\\" *ngIf=\\\"f.form.value.summaryType != '4'\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>From date</label>\\r\\n          <input type=\\\"date\\\" formControlName=\\\"fromdate\\\" class=\\\"form-control\\\">\\r\\n          <span *ngIf=\\\"reportForm.get('fromdate').hasError('required') && reportForm.get('fromdate').touched\\\"\\r\\n            class=\\\"text-danger text-12\\\">From date required</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-xs-6\\\" *ngIf=\\\"f.form.value.summaryType != '4'\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>To date</label>\\r\\n          <input type=\\\"date\\\" formControlName=\\\"todate\\\" class=\\\"form-control\\\">\\r\\n          <span *ngIf=\\\"reportForm.get('todate').hasError('required') && reportForm.get('todate').touched\\\"\\r\\n            class=\\\"text-danger text-12\\\">To date required</span>\\r\\n        </div>\\r\\n        <span *ngIf=\\\"error.isError\\\" class=\\\"text-danger text-12\\\">{{ error.errorMessage }}</span>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-3 col-xs-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Location</label>\\r\\n          <select class=\\\" form-control\\\" formControlName=\\\"location\\\" (click)=\\\"clearDiv()\\\">\\r\\n            <option selected value=\\\"\\\">Choose Location</option>\\r\\n            <option *ngFor=\\\"let item of locationList index as i\\\" value={{item.id}}>{{item?.branchName}}</option>\\r\\n          </select>\\r\\n          <span *ngIf=\\\"reportForm.get('summaryType').hasError('required') && reportForm.get('summaryType').touched\\\"\\r\\n            class=\\\"text-danger text-12\\\">Location required</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group input-group\\\">\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">From</span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" (click)=\\\"from.open()\\\" #fromInput\\r\\n                (dateInput)=\\\"addStartDate('input', $event)\\\" (dateChange)=\\\"addStartDate('change', $event)\\\" matInput\\r\\n                [matDatepicker]=\\\"from\\\">\\r\\n              <mat-datepicker #from></mat-datepicker>\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <span class=\\\"input-group-text\\\" id=\\\"basic-addon2\\\" (click)=\\\"from.open()\\\"><img\\r\\n                    src=\\\"./assets/icon/calendar.svg\\\" /></span>\\r\\n              </div>\\r\\n            </div>\\r\\n            <span *ngIf=\\\"showError\\\" class=\\\"text-danger text-12\\\">Start Date Field required</span>\\r\\n\\r\\n            <span *ngIf=\\\"error.isError\\\" class=\\\"text-danger text-12\\\">{{ error.errorMessage }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <div class=\\\"form-group input-group\\\">\\r\\n            <div class=\\\"input-group mb-3\\\">\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">To</span>\\r\\n              </div>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" #toInput (click)=\\\"to.open()\\\"\\r\\n                (dateInput)=\\\"addStartDate('input', $event)\\\" (dateChange)=\\\"addStartDate('change', $event)\\\" matInput\\r\\n                [matDatepicker]=\\\"to\\\">\\r\\n              <mat-datepicker #to></mat-datepicker>\\r\\n              <div class=\\\"input-group-append\\\">\\r\\n                <span class=\\\"input-group-text\\\" id=\\\"basic-addon2\\\" (click)=\\\"to.open()\\\"><img\\r\\n                    src=\\\"./assets/icon/calendar.svg\\\" /></span>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <span *ngIf=\\\"showError\\\" class=\\\"text-danger text-12\\\">To Date Field required</span>\\r\\n\\r\\n            </div>\\r\\n        </div> -->\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"float-right\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn px-4 form-group btn-primary\\\" [disabled]=\\\"!reportForm.valid\\\"\\r\\n      (click)=\\\"searchReport(reportForm.value)\\\">Search\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<div class=\\\"marg\\\">\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[0]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeUserCafe.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary of Active Users at Cafe</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeUserCafe,'Summary of Active Users at Cafe')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Period</th>\\r\\n            <th>Member frequency</th>\\r\\n            <th>Non-Member frequency</th>\\r\\n            <th>Total usage frquency</th>\\r\\n            <th>Total Login frequency</th>\\r\\n            <th>Total usage</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of activeUserCafe; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.period}}</td>\\r\\n            <td>{{user.memberFrequency}}</td>\\r\\n            <td>{{user.memberNonfrequency}}</td>\\r\\n            <td>{{user.totalUsageFrequency}}</td>\\r\\n            <td>{{user.totalLoginFrequency}}</td>\\r\\n            <td>{{user.totalUsage}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeUserCafe.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[1]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"cafeDetails?.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Cafe Usage Details</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(cafeDetails,'Summary Of Cafe Usage Details')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Date</th>\\r\\n            <th>Start time</th>\\r\\n            <th>Work station</th>\\r\\n            <th>Name</th>\\r\\n            <th>Nric</th>\\r\\n            <th>Member</th>\\r\\n            <th>Usage(Hrs)</th>\\r\\n            <th>Amount(RM)</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of cafeDetails; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.date}}</td>\\r\\n            <td>{{user.startTime}}</td>\\r\\n            <td>{{user.workstation}}</td>\\r\\n            <td>{{user.name}}</td>\\r\\n            <td>{{user.nric}}</td>\\r\\n            <td>{{user.isMember == true?'Yes':'No'}}</td>\\r\\n            <td>{{user.usage}}</td>\\r\\n            <td>{{user.amount}}</td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"cafeDetails?.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[2]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"courseDetails.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Training Course Details</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(courseDetails,'Summary Of Training Course Details')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Course date</th>\\r\\n            <th>Category</th>\\r\\n            <th>Course name</th>\\r\\n            <th>Duration</th>\\r\\n            <th>Target group</th>\\r\\n            <th>Trainer</th>\\r\\n            <th>Location</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of courseDetails; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.courseDate}}</td>\\r\\n            <td>{{user.category}}</td>\\r\\n            <td>{{user.courseName}}</td>\\r\\n            <td>{{user.duration}}</td>\\r\\n            <td>{{user.targetGroup}}</td>\\r\\n            <td>{{user.trainer}}</td>\\r\\n            <td>{{user.location}}</td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"courseDetails.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[3]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"attendanceList.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Total Attendance</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(attendanceList,'Summary Of Total Attendance')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Name</th>\\r\\n            <th>Nric</th>\\r\\n            <th>Age</th>\\r\\n            <th>Bumi Status</th>\\r\\n            <th>Occupation</th>\\r\\n            <th>Member</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of attendanceList; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.name}}</td>\\r\\n            <td>{{user.nric}}</td>\\r\\n            <td>{{user.age}}</td>\\r\\n            <td>{{user.bumiStatus == true?'Yes':'No'}}</td>\\r\\n            <td>{{user.occupation}}</td>\\r\\n            <td>{{user.member == true?'Yes':'No'}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"attendanceList.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[4]['show'] == true\\\">\\r\\n    <ng-container *ngIf=\\\"incomeListReport.length\\\">\\r\\n      <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <h5>Summary Of Income Report</h5>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n              (click)=\\\"downloadActiveMemberReport(incomeListReport,'Summary Of Income Report')\\\">Download</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>S.No</th>\\r\\n              <th>Item</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let user of incomeListReport; index as i\\\">\\r\\n              <td>{{i+1}}</td>\\r\\n              <td>{{user.name}}</td>\\r\\n              <td>{{user.amount}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"incomeListReport.length == 0\\\">\\r\\n        <h4>No records found for the search criteria</h4>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n    <ng-container *ngIf=\\\"expenseList.length\\\">\\r\\n      <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <h5>Summary Of Expense Report</h5>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n              (click)=\\\"downloadActiveMemberReport(expenseList,'Summary Of Expense Report')\\\">Download</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>S.No</th>\\r\\n              <th>Item</th>\\r\\n              <th>Amount</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of expenseList; index as i\\\">\\r\\n              <td>{{i+1}}</td>\\r\\n              <td>{{item.name}}</td>\\r\\n              <td>{{item.amount}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"expenseList.length == 0\\\">\\r\\n        <h4>No records found for the search criteria</h4>\\r\\n      </div>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[5]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeMemberReport.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5> Summary Of Active Member</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeMemberReport,'Summary Of Active Member')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Period</th>\\r\\n            <th>Member</th>\\r\\n            <th>Expired</th>\\r\\n            <th>Active Member</th>\\r\\n            <th>Active NonMember</th>\\r\\n            <th>Total Active Users</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of activeMemberReport; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.period}}</td>\\r\\n            <td>{{user.registeredMember}}</td>\\r\\n            <td>{{user.memberExpired}}</td>\\r\\n            <td>{{user.activeMember}}</td>\\r\\n            <td>{{user.activeNonMember}}</td>\\r\\n            <td>{{user.totalActiveUser}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeMemberReport.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[6]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeMemberGenderList.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Active Member By Gender</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeMemberGenderList,'Summary Of Active Member By Gender')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Period</th>\\r\\n            <th colspan=\\\"2\\\">Active Member</th>\\r\\n            <th colspan=\\\"2\\\">NonActive Member</th>\\r\\n            <th colspan=\\\"2\\\">Total Active Users</th>\\r\\n            <th colspan=\\\"2\\\">Total Trained</th>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th></th>\\r\\n            <th>Male</th>\\r\\n            <th>Female</th>\\r\\n            <th>Male</th>\\r\\n            <th>Female</th>\\r\\n            <th>Male</th>\\r\\n            <th>Female</th>\\r\\n            <th>Male</th>\\r\\n            <th>Female</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of activeMemberGenderList; index as i\\\">\\r\\n            <td style=\\\"text-align: left !important;\\\">{{user?.period}}</td>\\r\\n            <td>{{user?.activeMale}}</td>\\r\\n            <td>{{user?.activeFemale}}</td>\\r\\n            <td>{{user?.NonactiveMale}}</td>\\r\\n            <td>{{user?.NonactiveFemale}}</td>\\r\\n            <td>{{user?.totalActiveUserMale}}</td>\\r\\n            <td>{{user?.totalActiveUserFemale}}</td>\\r\\n            <td>{{user?.totalTrainedMale}}</td>\\r\\n            <td>{{user?.totalTrainedFemale}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeMemberGenderList.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[7]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeMemberBumiList.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Active Member By Bumi</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeMemberBumiList,'Summary Of Active Member By Bumi')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Period</th>\\r\\n            <th colspan=\\\"2\\\">Active Member</th>\\r\\n            <th colspan=\\\"2\\\">NonActive Member</th>\\r\\n            <th colspan=\\\"2\\\">Total Active Users</th>\\r\\n            <th colspan=\\\"2\\\">Total Trained</th>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th></th>\\r\\n            <th>Bumi</th>\\r\\n            <th>Non Bumi</th>\\r\\n            <th>Bumi</th>\\r\\n            <th>Non Bumi</th>\\r\\n            <th>Bumi</th>\\r\\n            <th>Non Bumi</th>\\r\\n            <th>Bumi</th>\\r\\n            <th>Non Bumi</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of activeMemberBumiList; index as i\\\">\\r\\n            <td style=\\\"text-align: left !important;\\\">{{user?.period}}</td>\\r\\n            <td>{{user?.memberBumi}}</td>\\r\\n            <td>{{user?.memberNonBumi}}</td>\\r\\n            <td>{{user?.nonMemberBumi}}</td>\\r\\n            <td>{{user?.nonMemberNonBumi}}</td>\\r\\n            <td>{{user?.totalActiveUserBumi}}</td>\\r\\n            <td>{{user?.totalActiveUserNonBumi}}</td>\\r\\n            <td>{{user?.totalTrainedBumi}}</td>\\r\\n            <td>{{user?.totalTrainedNonBumi}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeMemberBumiList.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[8]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeMemberAgeList.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Active Member By Age Group</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeMemberAgeList,'Summary Of Active Member By Age Group')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Period</th>\\r\\n            <th colspan=\\\"4\\\">Active Member</th>\\r\\n            <th colspan=\\\"4\\\">NonActive Member</th>\\r\\n            <th colspan=\\\"4\\\">Total Active Users</th>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th></th>\\r\\n            <th>less than 18 years old </th>\\r\\n            <th>18-35 years old</th>\\r\\n            <th>36-55 years old</th>\\r\\n            <th>>55 years old</th>\\r\\n            <th>less than 18 years old </th>\\r\\n            <th>18-35 years old</th>\\r\\n            <th>36-55 years old</th>\\r\\n            <th>>55 years old</th>\\r\\n            <th>less than 18 years old </th>\\r\\n            <th>18-35 years old</th>\\r\\n            <th>36-55 years old</th>\\r\\n            <th>>55 years old</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of activeMemberAgeList; index as i\\\">\\r\\n            <td style=\\\"text-align: left !important;\\\">{{user?.period}}</td>\\r\\n            <td>{{user?.activeeighteen}}</td>\\r\\n            <td>{{user?.activethirtyFive}}</td>\\r\\n            <td>{{user?.activefiftyFive}}</td>\\r\\n            <td>{{user?.activeaboveFiftyFive}}</td>\\r\\n            <td>{{user?.nonactiveeighteen}}</td>\\r\\n            <td>{{user?.nonactivethirtyFive}}</td>\\r\\n            <td>{{user?.nonactivefiftyFive}}</td>\\r\\n            <td>{{user?.nonactiveaboveFiftyFive}}</td>\\r\\n            <td>{{user?.totalusereighteen}}</td>\\r\\n            <td>{{user?.totaluserthirtyFive}}</td>\\r\\n            <td>{{user?.totaluserfiftyFive}}</td>\\r\\n            <td>{{user?.totaluseraboveFiftyFive}}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeMemberAgeList.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"reportsArray[9]['show'] == true\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\" *ngIf=\\\"activeMemberOccupation.length\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <h5>Summary Of Occupation</h5>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary m-2 sec\\\"\\r\\n            (click)=\\\"downloadActiveMemberReport(activeMemberOccupation,'Summary Of Active Member By Occupation')\\\">Download</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      table\\r\\n    </div>\\r\\n    <div *ngIf=\\\"activeMemberOccupation.length == 0\\\">\\r\\n      <h4>No records found for the search criteria</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div class=\\\"container\\\">\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\" *ngIf=\\\"EmplyeeDiv\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Email</th>\\r\\n            <th>Employee ID</th>\\r\\n            <th>Full Name</th>\\r\\n            <th>Phone Number</th>\\r\\n            <th>Role</th>\\r\\n            <th>Subscription ID</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of reportList; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.email}}</td>\\r\\n            <td>{{user.employeeId}}</td>\\r\\n            <td>{{user.fullName}}</td>\\r\\n            <td>{{user.phoneNumber}}</td>\\r\\n            <td>{{user.role}}</td>\\r\\n            <td>{{user.subscriptionId}}</td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\" *ngIf=\\\"CafeDiv\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Member ID</th>\\r\\n            <th>Location</th>\\r\\n            <th>Name</th>\\r\\n            <th>Contact Number</th>\\r\\n            <th>Email</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of cafeList; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.memeberCode}}</td>\\r\\n            <td>{{user.location.branchName}}</td>\\r\\n            <td>{{user.name}}</td>\\r\\n            <td>{{user.contactNo}}</td>\\r\\n            <td>{{user.emailId}}</td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\r\\n      <table class=\\\"table rounded table-borderless bg-light app-table\\\" *ngIf=\\\"TainingDiv\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Course</th>\\r\\n            <th>CourseCode</th>\\r\\n            <th>CourseType</th>\\r\\n            <th>Duration</th>\\r\\n            <th>Fee</th>\\r\\n            <th>Enrolled</th>\\r\\n            <th>Maximum Subscription</th>\\r\\n            <th>Status</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of tainingList; index as i\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{user.course}}</td>\\r\\n            <td>{{user.courseCode}}</td>\\r\\n            <td>\\r\\n              <ng-container *ngIf=\\\"user?.courseType == '1'\\\">Daily</ng-container>\\r\\n              <ng-container *ngIf=\\\"user?.courseType == '2'\\\">Weekly</ng-container>\\r\\n            </td>\\r\\n            <td>{{user.courseDuration}}</td>\\r\\n            <td>RM {{user.fee}}</td>\\r\\n            <td>{{user.enrolled}}</td>\\r\\n            <td>{{user.maximumSubscription}}</td>\\r\\n            <td><span class=\\\"text-success\\\" *ngIf=\\\"user.status=='1'\\\">Active</span><span class=\\\"text-danger\\\"\\r\\n                *ngIf=\\\"user.status!='1'\\\">Inactive</span></td>\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row \\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n\\r\\n      <div *ngIf=\\\"incomeDiv\\\">\\r\\n\\r\\n        <table class=\\\"table rounded table-borderless bg-light app-table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>S.No</th>\\r\\n              <th>User ID</th>\\r\\n              <th>Total Income</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let income of incomeList; index as i\\\">\\r\\n              <td>{{i+1}}</td>\\r\\n              <td>{{income.id}}</td>\\r\\n              <td *ngIf=\\\"income.totalAmount!=0\\\">{{income.totalAmount}}</td>\\r\\n              <td *ngIf=\\\"income.totalAmount==0\\\">\\r\\n                {{income.browesUsage + income.gst+income.serviceCharge+income.printUsage+income.foodUsage}}</td>\\r\\n\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div> -->\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Poppins&display=swap\\\");\\n@import url(\\\"https://fonts.googleapis.com/css?family=Merriweather:300,400,500i,700,900&display=swap\\\");\\n.role-select {\\n  border-radius: 25px;\\n  width: 50%;\\n  color: #3B3984;\\n  border: 1px solid #3B3984; }\\ntd {\\n  text-align: center;\\n  border: 1px solid #c4c4c4; }\\nth {\\n  text-align: center;\\n  background-color: #eeecf2;\\n  color: #000 !important;\\n  border: 1px solid #c4c4c4 !important;\\n  border-radius: 4px; }\\n.sec {\\n  justify-content: right !important;\\n  float: right !important; }\\n.marg {\\n  margin-top: 4em !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm91dGVzL3JlcG9ydHMtbWFuYWdlbWVudC9yZXBvcnRzLW1hbmFnZW1lbnQvRTpcXGZyb250ZW5kX2FnaWxlZWRnZV9ocV9jbXMvc3JjXFxhcHBcXHNoYXJlZFxcc3R5bGVzXFxhYnN0cmFjdHNcXGZvbnRzLnNjc3MiLCJzcmMvYXBwL3JvdXRlcy9yZXBvcnRzLW1hbmFnZW1lbnQvcmVwb3J0cy1tYW5hZ2VtZW50L0U6XFxmcm9udGVuZF9hZ2lsZWVkZ2VfaHFfY21zL3NyY1xcYXBwXFxyb3V0ZXNcXHJlcG9ydHMtbWFuYWdlbWVudFxccmVwb3J0cy1tYW5hZ2VtZW50XFxyZXBvcnRzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3JvdXRlcy9yZXBvcnRzLW1hbmFnZW1lbnQvcmVwb3J0cy1tYW5hZ2VtZW50L0U6XFxmcm9udGVuZF9hZ2lsZWVkZ2VfaHFfY21zL3NyY1xcYXBwXFxzaGFyZWRcXHN0eWxlc1xcYWJzdHJhY3RzXFx2YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSwyRUFBWTtBQUVaLHFHQUFZO0FDRFo7RUFDSSxtQkFBbUI7RUFDbkIsVUFBVTtFQUNWLGNDQ2U7RURBZix5QkNBZSxFQUFBO0FERW5CO0VBQ0ksa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFBO0FBRTdCO0VBQ0ksa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsb0NBQW9DO0VBQ3BDLGtCQUFrQixFQUFBO0FBRXRCO0VBQ0ksaUNBQWlDO0VBQ2pDLHVCQUF1QixFQUFBO0FBRzNCO0VBQ0ksMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yb3V0ZXMvcmVwb3J0cy1tYW5hZ2VtZW50L3JlcG9ydHMtbWFuYWdlbWVudC9yZXBvcnRzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qb3BwaW5zJmRpc3BsYXk9c3dhcCcpO1xyXG5cclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1NZXJyaXdlYXRoZXI6MzAwLDQwMCw1MDBpLDcwMCw5MDAmZGlzcGxheT1zd2FwJyk7IiwiQGltcG9ydCBcIi4uLy4uLy4uL3NoYXJlZC9zdHlsZXMvYWJzdHJhY3RzL2Fic3RyYWN0cy1kaXIuc2Nzc1wiO1xyXG5cclxuLnJvbGUtc2VsZWN0IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICB3aWR0aDogNTAlO1xyXG4gICAgY29sb3I6ICRwcmltYXJ5LWJnO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgJHByaW1hcnktYmc7XHJcbn1cclxudGQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2M0YzRjNDtcclxufVxyXG50aCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlY2YyO1xyXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjNGM0YzQgIWltcG9ydGFudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxufVxyXG4uc2VjIHtcclxuICAgIGp1c3RpZnktY29udGVudDogcmlnaHQgIWltcG9ydGFudDtcclxuICAgIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWFyZyB7XHJcbiAgICBtYXJnaW4tdG9wOiA0ZW0gIWltcG9ydGFudDtcclxufVxyXG4iLCIkd2hpdGUgOiAjRkZGRkZGO1xyXG4kYmxhY2sgOiAjMDAwMDAwO1xyXG5cclxuXHJcbiRwcmltYXJ5LWJnLWxpZ2h0IDogI2YxZjlmODtcclxuXHJcbiRwcmltYXJ5LWJnOiMzQjM5ODQ7XHJcbi8vICRzZWNvbmRhcnktYmc6IzJmYzJiMjsiXX0= */\"","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, Validators, NgForm } from '@angular/forms';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RemoteApiService } from '../../../core/services/remote-service/remote-api.service';\r\nimport { AppConstants } from '../../../core/constants/AppConstants';\r\nimport { ApiUrlConstants } from '../../../core/constants/apiUrlConstants';\r\nimport { AppService } from '../../../core/services/app/app.service';\r\nimport { Request } from '../../../core/services/remote-service/reqResObj/Request';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport * as moment from 'moment';\r\nimport { MatInput } from '@angular/material';\r\n@Component({\r\n  selector: 'app-reports-management',\r\n  templateUrl: './reports-management.component.html',\r\n  styleUrls: ['./reports-management.component.scss']\r\n})\r\nexport class ReportsManagementComponent implements OnInit {\r\n  public reportForm: any;\r\n  public APILIST: any;\r\n  public userData = localStorage.getItem('userId');\r\n  public data: any;\r\n  @ViewChild('fromInput', { read: MatInput }) fromInput: MatInput;\r\n\r\n  @ViewChild('toInput', { read: MatInput }) toInput: MatInput;\r\n\r\n  courseList = [];\r\n  location: any;\r\n  reportList: any;\r\n  loader: any = true;\r\n  cafeList: any;\r\n  TainingDiv: boolean = false;\r\n  CafeDiv: boolean = false;\r\n  tainingList: any;\r\n  incomeList: any;\r\n  ExpenseList: any;\r\n  public fromdate: any;\r\n  public todate: any;\r\n  EmplyeeDiv: boolean = false;\r\n  incomeDiv: boolean = false;\r\n  expenseDiv: boolean = false;\r\n  showError: boolean = false;\r\n  locationList: any;\r\n  error: any = { isError: false, errorMessage: '' };\r\n  locationid: any;\r\n\r\n  public reportsArray = [\r\n    {\r\n      id: \"1\",\r\n      name: 'Summary of Active Users at Cafe',\r\n      show: false,\r\n      function: \"getActiveusersAtCafe\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      name: 'Summary of Cafe Usage Details',\r\n      show: false,\r\n      function: \"getCafeDetailsReport\"\r\n    },\r\n    {\r\n      id: \"3\",\r\n      name: 'Summary of Training Course List',\r\n      show: false,\r\n      function: \"getCourseReport\"\r\n    },\r\n    {\r\n      id: \"4\",\r\n      name: 'Summary of Training Attendance List',\r\n      show: false,\r\n      function: \"getAttendanceReport\"\r\n    },\r\n    {\r\n      id: \"5\",\r\n      name: 'Income & Expense Summary',\r\n      show: false,\r\n      function: \"getincomeExpenseReport\"\r\n    },\r\n    {\r\n      id: \"6\",\r\n      name: 'Summary of Active Member',\r\n      show: false,\r\n      function: \"getActiveMemberReport\"\r\n    },\r\n    {\r\n      id: \"7\",\r\n      name: 'Summary of Active Member by Gender',\r\n      show: false,\r\n      function: \"getActiveMemberByGenderReport\"\r\n    },\r\n    {\r\n      id: \"8\",\r\n      name: 'Summary of Active Member by Bumi Status',\r\n      show: false,\r\n      function: \"getActiveMemberByBumi\"\r\n    },\r\n    {\r\n      id: \"9\",\r\n      name: 'Summary of active Member by Age Group',\r\n      show: false,\r\n      function: \"getActiveAgeReport\"\r\n    },\r\n    {\r\n      id: \"10\",\r\n      name: 'Summary of active Member by Occupation',\r\n      show: false,\r\n      function: \"getActiveMemberByOccupation\"\r\n    },\r\n    {\r\n      id: \"11\",\r\n      name: 'Summary of Leave',\r\n      show: false,\r\n      function: \"getLeaveReport\"\r\n    }\r\n  ]\r\n\r\n  public activeMemberReport = [];\r\n\r\n  public activeUserCafe = [];\r\n\r\n  public cafeDetails = [];\r\n\r\n  public courseDetails = [];\r\n\r\n  public attendanceList = [];\r\n\r\n  public incomeListReport = [];\r\n\r\n  public activeMemberGenderList = [];\r\n\r\n  public activeMemberBumiList = [];\r\n\r\n  public activeMemberAgeList = [];\r\n\r\n  public activeMemberOccupation = [];\r\n\r\n  public expenseList = [];\r\n\r\n  public leaveReport = [];\r\n\r\n  public trainingList = [];\r\n\r\n  constructor(\r\n    public request: Request,\r\n    public api: RemoteApiService,\r\n    private route: ActivatedRoute) {\r\n    this.reportForm = new FormGroup({\r\n      summaryType: new FormControl('', [Validators.required]),\r\n      fromdate: new FormControl('', [Validators.required]),\r\n      location: new FormControl('', [Validators.required]),\r\n      todate: new FormControl('', [Validators.required]),\r\n      period: new FormControl('', [Validators.required]),\r\n      incomeType: new FormControl(''),\r\n      courseId: new FormControl('')\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clearDiv()\r\n    // this.user=localStorage.getItem('user');\r\n    this.userData = localStorage.getItem('userId');\r\n    this.getLocation();\r\n    this.getAllTraining();\r\n    // console.log(this.user,\"USERDATA\")\r\n  }\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0]\r\n  }\r\n  compareTwoDates() {\r\n    // if (new Date(this.reportForm.controls['fromdate'].value) < new Date(this.reportForm.controls['fromdate'].value)) {\r\n    //   this.error = { isError: true, errorMessage: 'From Date Should be greater than To Date' };\r\n    // } else {\r\n    //   this.error = { isError: false }\r\n    // }\r\n  }\r\n  clearDiv() {\r\n    this.reportsArray.forEach(element => {\r\n      element['show'] = false\r\n    });\r\n  }\r\n  searchReport(data) {\r\n    console.log(data, \"CheckData\")\r\n    this.data = data;\r\n    this.fromdate = data.fromdate;\r\n    this.todate = data.todate;\r\n    this.location = parseInt(data.location)\r\n    this.reportsArray.forEach(element => {\r\n      if (element['id'] == data.summaryType) {\r\n        this[element['function']](data)\r\n        element['show'] = true;\r\n      }\r\n      else element['show'] = false;\r\n    })\r\n    // this.data = data;\r\n    // this.compareTwoDates();\r\n    // this.fromdate = data.fromdate;\r\n    // this.todate = data.todate\r\n    // this.location = parseInt(data.location)\r\n    // if (data.summaryType == 1) {\r\n    //   this.getAllUserReport()\r\n    // }\r\n    // else if (data.summaryType == 2) {\r\n    //   this.getcafeReport();\r\n    //   // this.APILIST=ApiUrlConstants.GET_TRAINING_REPORT\r\n    // }\r\n    // else if (data.summaryType == 3) {\r\n    //   this.getTainingReport();\r\n    // }\r\n    // else if (data.summaryType == 4) {\r\n    // } else if (data.summaryType == 5) {\r\n    //   this.getIncomeReport();\r\n    // } else if (data.summaryType == 6) {\r\n    //   // this.getExpenseReport()\r\n    // } else {\r\n    //   return null\r\n    // }\r\n    // this.reportForm.reset();\r\n  }\r\n\r\n  getLocation() {\r\n    this.location = this.userData;\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.GET_LOCATION;\r\n    this.request.params = \"\";\r\n    this.request.body = \"\";\r\n    this.api.requestObject(this.request).then(data => {\r\n      // this.locationid = data.branchAllocation;\r\n      this.locationList = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getActiveMemberReport(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_ACTIVE_MEMBER_REPORT;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeMemberReport = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  modifyRestObj(data, val?) {\r\n    let from = \"\";\r\n    let to = \"\";\r\n    if (data.period == \"yearly\") {\r\n      from = data.fromdate.slice(0, 4);\r\n      to = data.todate.slice(0, 4);\r\n    } else if (data.period == \"monthly\") {\r\n      from = data.fromdate.slice(0, 7);\r\n      to = data.todate.slice(0, 7);\r\n    }\r\n    else {\r\n      from = data.fromdate;\r\n      to = data.todate;\r\n    }\r\n    return {\r\n      \"period\": data.period,\r\n      \"fromdate\": from,\r\n      \"todate\": to,\r\n      \"location\": this.location\r\n    }\r\n  }\r\n\r\n  getActiveusersAtCafe(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_BY_ACTIVE_CAFE_USAGE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeUserCafe = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getCafeDetailsReport(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_BY_CAFE_USAGE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.cafeDetails = data[0]['cafeUsage'];\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getCourseReport(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_BY_TRAINING_COURSE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.courseDetails = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getincomeExpenseReport(data) {\r\n    let restObj = {\r\n      \"type\": data.incomeType,\r\n      \"fromdate\": data.fromdate,\r\n      \"todate\": data.todate,\r\n      \"location\": this.location\r\n    }\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_EXPENSE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      if (restObj.type == \"income\") {\r\n        this.incomeListReport = data[0]['income']['printOut'];\r\n      } else if (restObj.type == \"expense\") this.expenseList = data[0]['expense']\r\n      else {\r\n        this.incomeListReport = data[0]['income']['printOut'];\r\n        this.expenseList = data[0]['expense']\r\n      }\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getAttendanceReport(data) {\r\n    let restObj = {\r\n      \"courseId\": data.courseId,\r\n      \"location\": this.locationid\r\n    }\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_BY_TRAINING_ATTENDANCE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.attendanceList = data\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n\r\n  getActiveMemberByGenderReport(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_ACTIVE_BY_GENDER;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeMemberGenderList = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getActiveMemberByBumi(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_ACTIVE_BY_BUMI;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeMemberBumiList = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getActiveAgeReport(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_ACTIVE_BY_AGE;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeMemberAgeList = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getActiveMemberByOccupation(data) {\r\n    let restObj = this.modifyRestObj(data);\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.GET_ACTIVE_BY_OCCUPATION;\r\n    this.request.params = \"\";\r\n    this.request.body = restObj;\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.activeMemberOccupation = [];\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  getLeaveReport(data) {\r\n    console.log(data);\r\n  }\r\n\r\n  getAllTraining() {\r\n    this.loader = true;\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.TRAINING;\r\n    this.request.params = \"\"\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.trainingList = data;\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n\r\n  // getIncomeReport() {\r\n  //   this.incomeDiv = true;\r\n  //   let obj = {\r\n  //     fromdate: this.fromdate + \":20\",\r\n  //     todate: this.todate + \":20\",\r\n  //     location: this.location\r\n  //   }\r\n  //   this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n  //   this.request.type = AppConstants.API_POST;\r\n  //   this.request.reqModule = ApiUrlConstants.GET_INCOME_REPORT;\r\n  //   this.request.params = \"\";\r\n  //   this.request.body = obj;\r\n  //   this.api.requestObject(this.request).then(data => {\r\n  //     this.incomeList = data;\r\n  //     console.log('income', this.incomeList)\r\n  //   }, (err) => {\r\n  //     this.incomeDiv = false;\r\n  //     // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n  //     // this.errLogin = err.error;\r\n  //   });\r\n  // }\r\n  checkDate(event) {\r\n    console.log(event, \"EVENT\")\r\n  }\r\n\r\n  // getcafeReport() {\r\n  //   // this.getLocation()\r\n  //   let obj = {\r\n  //     fromdate: this.fromdate + \":20\",\r\n  //     todate: this.todate + \":20\",\r\n  //     location: this.location\r\n  //   }\r\n  //   this.CafeDiv = true;\r\n  //   this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n  //   this.request.type = AppConstants.API_POST;\r\n  //   this.request.reqModule = ApiUrlConstants.GET_ALL_VISITOR;\r\n  //   this.request.params = \"\";\r\n  //   this.request.body = obj;\r\n  //   this.api.requestObject(this.request).then(data => {\r\n  //     this.cafeList = data;\r\n\r\n  //   }, (err) => {\r\n  //     this.CafeDiv = false;\r\n  //     // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n  //     // this.errLogin = err.error;\r\n  //   });\r\n  // }\r\n  // getTainingReport() {\r\n  //   let obj = {\r\n  //     fromdate: this.fromdate + \":20\",\r\n  //     todate: this.todate + \":20\",\r\n  //     location: this.location\r\n  //   }\r\n  //   this.TainingDiv = true;\r\n  //   this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n  //   this.request.type = AppConstants.API_POST;\r\n  //   this.request.reqModule = ApiUrlConstants.GET_TRAINING_REPORT;\r\n  //   this.request.params = \"\";\r\n  //   this.request.body = obj;\r\n  //   this.api.requestObject(this.request).then(data => {\r\n  //     this.tainingList = data;\r\n\r\n  //   }, (err) => {\r\n  //     this.TainingDiv = false;\r\n  //     // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n  //     // this.errLogin = err.error;\r\n  //   });\r\n  // }\r\n  // getAllUserReport() {\r\n  //   this.EmplyeeDiv = true;\r\n  //   let obj = {\r\n  //     fromdate: this.fromdate + \":20\",\r\n  //     todate: this.todate + \":20\",\r\n  //     location: this.location\r\n  //     // location: parseInt(this.data.location)\r\n  //   }\r\n  //   console.log(obj)\r\n  //   this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n  //   this.request.type = AppConstants.API_POST;\r\n  //   this.request.reqModule = ApiUrlConstants.GET_USER_REPORT;\r\n  //   this.request.params = \"\";\r\n  //   this.request.body = obj;\r\n  //   this.api.requestObject(this.request).then(data => {\r\n  //     this.reportList = data;\r\n  //     console.log(this.reportList, \"Locationb\")\r\n  //   }, (err) => {\r\n  //     this.EmplyeeDiv = false;\r\n\r\n  //     // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n  //     // this.errLogin = err.error;\r\n  //   });\r\n  // }\r\n  // addStartDate(type: string, event: MatDatepickerInputEvent<Date>) {\r\n  //   // this.events.push(`${type}: ${event.value}`);\r\n  //   this.startDate = event.value\r\n  //   this.startDate = moment(this.startDate._d).format(\"YYYY-MM-DD\")\r\n  //   console.log(this.startDate);\r\n  //   if(this.startDate == ''){\r\n  //     this.showError = true;\r\n  //   }\r\n  // }\r\n  // addEndDate(type: string, event: MatDatepickerInputEvent<Date>) {\r\n  //   // this.events.push(`${type}: ${event.value}`);\r\n  //   this.endDate = event.value\r\n  //   this.endDate = moment(this.endDate._d).format(\"YYYY-MM-DD\");\r\n  //   if(this.endDate == ''){\r\n  //     this.showError = true;\r\n  //   }\r\n  //   console.log(this.endDate);\r\n\r\n  // }\r\n\r\n  downloadActiveMemberReport(dataList, title) {\r\n    if (dataList.length) {\r\n      let reportData = JSON.parse(JSON.stringify(dataList));\r\n      const toPrintArray = reportData.map(item =>\r\n        Object.keys(item).reduce((accumulator, key) => {\r\n          // accumulator is the new object we are creating\r\n          accumulator[this.modifyKeys(key)] = item[key];\r\n          return accumulator;\r\n        }, {})\r\n      );\r\n      var data, filename, link;\r\n      var csv = this.convertArrayOfObjectsToCSV({\r\n        data: toPrintArray\r\n      });\r\n      if (csv == null) return;\r\n\r\n      filename = title + '.csv';\r\n\r\n      if (!csv.match(/^data:text\\/csv/i)) {\r\n        csv = 'data:text/csv;charset=utf-8,' + csv;\r\n      }\r\n      data = encodeURI(csv);\r\n\r\n      link = document.createElement('a');\r\n      link.setAttribute('href', data);\r\n      link.setAttribute('download', filename);\r\n      link.click();\r\n    }\r\n  }\r\n\r\n  modifyKeys(value) {\r\n    var result = value.replace(/([A-Z])/g, \" $1\");\r\n    return result.charAt(0).toUpperCase() + result.slice(1);\r\n  }\r\n\r\n  convertArrayOfObjectsToCSV(args) {\r\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data;\r\n\r\n    data = args.data || null;\r\n    if (data == null || !data.length) {\r\n      return null;\r\n    }\r\n\r\n    columnDelimiter = args.columnDelimiter || ',';\r\n    lineDelimiter = args.lineDelimiter || '\\n';\r\n\r\n    keys = Object.keys(data[0]);\r\n\r\n    result = '';\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    data.forEach(function (item) {\r\n      ctr = 0;\r\n      keys.forEach(function (key) {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += item[key];\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getClass = () => {\r\n    if (this.reportForm.value.summaryType == '4') return \"col-md-6\";\r\n    return \"col-md-12\";\r\n  }\r\n\r\n  getEvent(event) {\r\n    console.log(event);\r\n    let from = this.reportForm.get('fromdate');\r\n    let to = this.reportForm.get('todate');\r\n    let period = this.reportForm.get('period');\r\n    if (event == '4') {\r\n      this.reportsArray.forEach(element => {\r\n        element['show'] = false\r\n      })\r\n      from.clearValidators();\r\n      from.updateValueAndValidity();\r\n      to.clearValidators();\r\n      to.updateValueAndValidity();\r\n      period.clearValidators();\r\n      period.updateValueAndValidity();\r\n    } else if (event == '5') {\r\n      period.clearValidators();\r\n      period.updateValueAndValidity();\r\n    } else {\r\n      this.reportsArray.forEach(element => {\r\n        element['show'] = false\r\n      })\r\n      from.setValidators([Validators.required]);\r\n      from.updateValueAndValidity();\r\n      to.setValidators([Validators.required]);\r\n      to.updateValueAndValidity();\r\n      period.setValidators([Validators.required]);\r\n      period.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}