{"version":3,"sources":["webpack:///./src/app/routes/employee-management/employee-create/employee-create.component.html","webpack:///./src/app/routes/employee-management/employee-create/employee-create.component.scss","webpack:///./src/app/routes/employee-management/employee-create/employee-create.component.ts","webpack:///./src/app/routes/employee-management/employee-management.module.ts","webpack:///./src/app/routes/employee-management/employee-management/employee-management.component.html","webpack:///./src/app/routes/employee-management/employee-management/employee-management.component.scss","webpack:///./src/app/routes/employee-management/employee-management/employee-management.component.ts"],"names":[],"mappings":"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","file":"employee-management-employee-management-module.js","sourcesContent":["module.exports = \"<div class=\\\"row mt-4 form-group\\\">\\r\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n        <h4 class=\\\" header-titel mx-2 px-3\\\">{{itemid ? 'Update Employee' : 'Create Employee'}} </h4>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-sm-12 text-right\\\">\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row mb-5 mx-2\\\">\\r\\n    <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n        <div class=\\\"shadow card border-0\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <form [formGroup]=\\\"employeeForm\\\">\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Full Name</label>\\r\\n                                <input formControlName=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('fullName').hasError('required') && employeeForm.get('fullName').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Full name required</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Employee ID</label>\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"employeeId\\\" class=\\\"form-control\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('employeeId').hasError('required') && employeeForm.get('employeeId').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Employee ID required</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>NRIC no</label>\\r\\n                                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"subscriptionId\\\"\\r\\n                                    (keypress)=\\\"numberOnly($event)\\\"> -->\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"subscriptionId\\\" class=\\\"form-control\\\" placeholder=\\\"xxxxxx-xx-xxxx\\\">    \\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('subscriptionId').hasError('required') && employeeForm.get('subscriptionId').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">NRIC no required</span>\\r\\n                                <span *ngIf=\\\"employeeForm.get('subscriptionId').hasError('pattern')\\\" class=\\\"text-danger text-12\\\">Not a valid NRIC\\r\\n                                    number</span>    \\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Race</label>\\r\\n                                <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"RaceId\\\"\\r\\n                                    (keypress)=\\\"numberOnly($event)\\\"> -->\\r\\n                                <select class=\\\"form-control\\\" formControlName=\\\"RaceId\\\">\\r\\n                                    <option value=\\\"\\\" selected>Select Race</option>\\r\\n                                    <option value=\\\"Malay\\\">Malay</option>\\r\\n                                    <option value=\\\"Chinese\\\">Chinese</option>\\r\\n                                    <option value=\\\"Indian\\\">Indian</option>\\r\\n                                    <option value=\\\"Bumiputera\\\">Bumiputera</option>\\r\\n                                    <option value=\\\"Others\\\">Others</option>\\r\\n                                    <!-- <option value=false>Female</option> -->\\r\\n\\r\\n                                </select>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('RaceId').hasError('required') && employeeForm.get('RaceId').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Race required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>DOB</label>\\r\\n                                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"dob\\\" [max]=\\\"getToday()\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('dob').hasError('required') && employeeForm.get('dob').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">DOB required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Gender</label>\\r\\n                                <select class=\\\"form-control\\\" formControlName=\\\"gender\\\">\\r\\n                                    <option value=\\\"\\\" selected>Select Gender</option>\\r\\n                                    <option value=\\\"true\\\">Male</option>\\r\\n                                    <option value=\\\"false\\\">Female</option>\\r\\n                                    <!-- <option value=false>Female</option> -->\\r\\n\\r\\n                                </select>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('gender').hasError('required') && employeeForm.get('gender').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Gender required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <!-- <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Religion CID</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"ReligionCId\\\"\\r\\n                                    (keypress)=\\\"numberOnly($event)\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('ReligionCId').hasError('required') && employeeForm.get('ReligionCId').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Religion CID required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div> -->\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Contact No</label>\\r\\n                                <div class=\\\"input-group mb-3\\\">\\r\\n\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">+60\\r\\n                                        </span>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"phonenumber\\\" class=\\\"form-control\\\" formControlName=\\\"phoneNumber\\\"\\r\\n                                        (keypress)=\\\"numberOnly($event)\\\" minlength=\\\"10\\\" maxlength=\\\"12\\\">\\r\\n\\r\\n                                </div>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('phoneNumber').hasError('required') && employeeForm.get('phoneNumber').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Contact Number required</span>\\r\\n                                <span *ngIf=\\\"employeeForm.get('phoneNumber').hasError('minLength')\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Contact Number must be at lease 10 to 12 numbers</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Job Category </label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"jobCategory\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('jobCategory').hasError('required') && employeeForm.get('jobCategory').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Job Category required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Position</label>\\r\\n                                <select formControlName=\\\"positionId\\\" class=\\\"form-control\\\">\\r\\n                                    <option value=\\\"\\\" selected>Choose Role</option>\\r\\n                                    <option *ngFor=\\\"let item of roleList\\\" [value]=\\\"item?.id\\\"\\r\\n                                        [selected]=\\\"positionId == item.id?item:null\\\">\\r\\n                                        {{item?.name}}\\r\\n                                    </option>\\r\\n                                </select>\\r\\n                                <!-- <select formControlName=\\\"positionId\\\" class=\\\"form-control\\\">\\r\\n                                    <option value=\\\"0\\\">None</option>\\r\\n                                    <option value=\\\"Admin\\\">Admin</option>\\r\\n                                    <option value=\\\"Manager\\\">Manager</option>\\r\\n                                    <option value=\\\"Employee\\\">Employee</option>\\r\\n                                </select> -->\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('positionId').hasError('required') && employeeForm.get('positionId').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Position required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Joining Date</label>\\r\\n                                <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"joiningDate\\\"\\r\\n                                    [min]=\\\"getToday()\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('joiningDate').hasError('required') && employeeForm.get('joiningDate').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Joining Date required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Branch allocation</label>\\r\\n                                <select formControlName=\\\"branchAllocation\\\" class=\\\"form-control\\\">\\r\\n                                    <option value=\\\"0\\\">None</option>\\r\\n                                    <option *ngFor=\\\"let item of cafeData index as i\\\" value={{item.id}}>\\r\\n                                        {{item?.branchName}}</option>\\r\\n                                </select>\\r\\n\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('branchAllocation').hasError('required') && employeeForm.get('branchAllocation').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Branch allocation required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Nationality</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"nationality\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('nationality').hasError('required') && employeeForm.get('nationality').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Nationality required</span>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Total obtain leave</label>\\r\\n                                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"totalObtain\\\"\\r\\n                                    ng-pattern=\\\"/^[0-9]+(\\\\.[0-9]{1,2})?$/\\\" step=\\\"0.01\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('totalObtain').hasError('required') && employeeForm.get('totalObtain').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Total obtain required</span>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('totalObtain').hasError('pattern') && employeeForm.get('totalObtain').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Total obtain must be number or decimal value.</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Email ID</label>\\r\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\">\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('email').hasError('required') && employeeForm.get('email').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Email ID required</span>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('email').hasError('pattern') && employeeForm.get('email').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Email must be a valid email address</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-6 col-xs-6\\\" *ngIf=\\\"!itemid\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Password</label>\\r\\n                                <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\"\\r\\n                                    id=\\\"passwordInput\\\">\\r\\n                                <div class=\\\"show-password\\\">\\r\\n                                    <input type=\\\"checkbox\\\" (click)=\\\"showPassword()\\\"> Show Password\\r\\n                                </div>\\r\\n                                <span\\r\\n                                    *ngIf=\\\"employeeForm.get('password').hasError('required') && employeeForm.get('password').touched\\\"\\r\\n                                    class=\\\"text-danger text-12\\\">Password required</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row mt-3\\\">\\r\\n                        <div class=\\\"col-md-12 col-xs-12 text-right\\\">\\r\\n                            <!-- <a type=\\\"button\\\" class=\\\"btn btn-primary\\\" href=\\\"../empoyeeManagement/index.html\\\">Create New</a> -->\\r\\n                            <button *ngIf=\\\"!itemid\\\" class=\\\"btn btn-primary px-5 py-2\\\" [disabled]=\\\"!employeeForm.valid\\\"\\r\\n                                (click)=\\\"addEmployee(employeeForm.value)\\\">Create New</button>\\r\\n                            <button *ngIf=\\\"itemid\\\" class=\\\"btn btn-primary\\\"\\r\\n                                (click)=\\\"updateEmployee(employeeForm.value);\\\">Save & Continue</button>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"","module.exports = \".img-upload::after {\\n  content: \\\"+\\\";\\n  position: absolute;\\n  padding: 4px 8px;\\n  margin-top: 1.0rem;\\n  background-color: #ddd;\\n  border-radius: 100%;\\n  font-size: 11px; }\\n\\n.hideFile {\\n  opacity: 0;\\n  width: 30px;\\n  height: 30px;\\n  position: absolute;\\n  left: 0; }\\n\\n.show-password {\\n  margin-top: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm91dGVzL2VtcGxveWVlLW1hbmFnZW1lbnQvZW1wbG95ZWUtY3JlYXRlL0U6XFxmcm9udGVuZF9hZ2lsZWVkZ2VfaHFfY21zL3NyY1xcYXBwXFxyb3V0ZXNcXGVtcGxveWVlLW1hbmFnZW1lbnRcXGVtcGxveWVlLWNyZWF0ZVxcZW1wbG95ZWUtY3JlYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsZUFBZSxFQUFBOztBQUVuQjtFQUNFLFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixPQUFPLEVBQUE7O0FBRVQ7RUFDRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JvdXRlcy9lbXBsb3llZS1tYW5hZ2VtZW50L2VtcGxveWVlLWNyZWF0ZS9lbXBsb3llZS1jcmVhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW1nLXVwbG9hZDo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCIrXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBwYWRkaW5nOiA0cHggOHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMS4wcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG4uaGlkZUZpbGV7XHJcbiAgb3BhY2l0eTogMDtcclxuICB3aWR0aDogMzBweDtcclxuICBoZWlnaHQ6IDMwcHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDA7XHJcbn1cclxuLnNob3ctcGFzc3dvcmQge1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, Validators, NgForm } from '@angular/forms';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { RemoteApiService } from '../../../core/services/remote-service/remote-api.service';\r\nimport { AppConstants } from '../../../core/constants/AppConstants';\r\nimport { ApiUrlConstants } from '../../../core/constants/apiUrlConstants';\r\nimport { AppService } from '../../../core/services/app/app.service';\r\nimport { Request } from '../../../core/services/remote-service/reqResObj/Request';\r\nimport { AlertService } from '../../services/alert/alert.service';\r\nimport * as moment from 'moment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nclass ImageSnippet {\r\n  constructor(public src: string, public file: File) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-employee-create',\r\n  templateUrl: './employee-create.component.html',\r\n  styleUrls: ['./employee-create.component.scss']\r\n})\r\nexport class EmployeeCreateComponent implements OnInit {\r\n  public employeeForm: FormGroup;\r\n  public fileUploadForm: FormGroup;\r\n  public fullName: any;\r\n  public employeeId: any;\r\n  public subscriptionId: any;\r\n  public storeImage: File;\r\n  public isImgUploaded: any = false;\r\n  public RaceId: any;\r\n  public dob: any = null;\r\n  public gender = false;\r\n  // public ReligionCId: any;\r\n  public phoneNumber: any;\r\n  public jobCategory: any;\r\n  public positionId: any;\r\n  public joiningDate: any = null;\r\n  public email: any;\r\n  public storeData: any = {};\r\n  public profilePhoto: any;\r\n  // public citizenShip: any;\r\n  public nationality: any;\r\n  public totalObtain:any = '';\r\n  // public businessFax: any;\r\n  public password: any = '';\r\n  public branchAllocation: any;\r\n  public profilePicture: any;\r\n  public itemid: any;\r\n  selectedFile: ImageSnippet;\r\n  cafeData: any;\r\n  data: any;\r\n  public roleList = [];\r\n  constructor(\r\n    private router: Router,\r\n    private activateRoute: ActivatedRoute,\r\n    public request: Request,\r\n    public api: RemoteApiService,\r\n    private alert: AlertService, private http: HttpClient, private cd: ChangeDetectorRef\r\n  ) {\r\n    const emailPattern = '[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,63}';\r\n    this.fileUploadForm = new FormGroup({\r\n      profilePicture: new FormControl(this.profilePicture, [Validators.required]),\r\n    });\r\n    this.employeeForm = new FormGroup({\r\n      fullName: new FormControl('', [Validators.required]),\r\n      employeeId: new FormControl('', [Validators.required]),\r\n      subscriptionId: new FormControl('', [Validators.required, Validators.pattern(\"\\\\d{6}\\\\-\\\\d{2}\\\\-\\\\d{4}\")]),\r\n      RaceId: new FormControl('', [Validators.required]),\r\n      dob: new FormControl('', [Validators.required]),\r\n      gender: new FormControl('', [Validators.required]),\r\n      // ReligionCId: new FormControl('', [Validators.required]),\r\n      phoneNumber: new FormControl('', [Validators.required, Validators.maxLength(10), Validators.minLength(8)]),\r\n      jobCategory: new FormControl('', [Validators.required]),\r\n      positionId: new FormControl('', [Validators.required]),\r\n      joiningDate: new FormControl('', [Validators.required]),\r\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern(emailPattern)])),\r\n      // citizenShip: new FormControl('', [Validators.required]),\r\n      nationality: new FormControl('', [Validators.required]),\r\n      totalObtain: new FormControl('', [Validators.required]),\r\n      // businessFax: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required]),\r\n      branchAllocation: new FormControl('', [Validators.required]),\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activateRoute.queryParams.subscribe(params => {\r\n      this.itemid = params[\"id\"];\r\n    });\r\n    this.getCafe();\r\n    if (this.itemid) {\r\n      this.editEmployee()\r\n    }\r\n    this.getRoleList();\r\n  }\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0]\r\n  }\r\n\r\n  getRoleList() {\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.GET_ALL_ROLES;\r\n    this.request.params = \"\"\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.roleList = data;\r\n      // this.router.navigate(['/employeeManagement']);\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n  getCafe() {\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.GET_ALL_CAFE;\r\n    this.request.params = \"\";\r\n    this.request.body = \"\"\r\n    this.api.requestObject(this.request).then(data => {\r\n\r\n      this.cafeData = data\r\n      console.log(this.cafeData, \"cafeData\")\r\n      // this.router.navigate(['/employeeManagement']);\r\n\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n\r\n  }\r\n\r\n  addEmployee(data) {\r\n    // const formData = new FormData();\r\n    // formData.append('file', this.fileData);\r\n    let obj = {\r\n      email: data.email,\r\n      phoneNumber: data.phoneNumber,\r\n      fullName: data.fullName,\r\n      employeeId: data.employeeId,\r\n      subscriptionId: data.subscriptionId,\r\n      branchAllocation: data.branchAllocation,\r\n      role: data.positionId,\r\n    }\r\n    this.data = Object.assign(obj, data)\r\n\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.CREATE_EMPLOYEE;\r\n    this.request.body = obj;\r\n    this.request.params = \"\";\r\n\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.alert.stickyAlerShow('Created Successful', 'alert-success');\r\n      console.log(data, \"create Emp\")\r\n      console.log(JSON.stringify(data));\r\n\r\n      this.router.navigate(['/employeeManagement']);\r\n\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n\r\n  }\r\n\r\n  updateEmployee(data) {\r\n\r\n    let obj = {\r\n      email: data.email,\r\n      phoneNumber: data.phoneNumber,\r\n      fullName: data.fullName,\r\n      employeeId: data.employeeId,\r\n      subscriptionId: data.subscriptionId,\r\n      branchAllocation: data.branchAllocation,\r\n      role: data.positionId,\r\n    }\r\n    console.log(data, \"FormData\")\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.Update_EMPLOYEE;\r\n    this.request.body = obj;\r\n    this.request.params = this.itemid;\r\n    this.api.requestObject(this.request).then(data => {\r\n      console.log(data, \"updatevisitor\");\r\n\r\n      console.log(JSON.stringify(data));\r\n      this.alert.stickyAlerShow('Updated Successful', 'alert-success');\r\n\r\n      this.router.navigate(['/employeeManagement']);\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n  editEmployee() {\r\n\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.USER;\r\n    this.request.params = this.itemid\r\n    this.request.body = \"\";\r\n    console.log(this.request, \"reqqqq\")\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.profilePicture = data.profilePicture;\r\n      this.employeeForm.setValue({\r\n        fullName: data.fullName,\r\n        employeeId: data.employeeId,\r\n        subscriptionId: data.subscriptionId,\r\n        RaceId: data.RaceId,\r\n        dob: moment(data.dob).format(\"YYYY-MM-DD\"),\r\n        gender: data.gender,\r\n        // ReligionCId: data.ReligionCId,\r\n        phoneNumber: data.phoneNumber,\r\n        jobCategory: data.jobCategory,\r\n        positionId: data.positionId,\r\n        joiningDate: moment(data.joiningDate).format(\"YYYY-MM-DD\"),\r\n        email: data.email,\r\n        // citizenShip: data.citizenShip,\r\n        nationality: data.nationality,\r\n        totalObtain: data.totalObtain,\r\n        // businessFax: data.businessFax,\r\n        password: '',\r\n        branchAllocation: data.branchAllocation\r\n      })\r\n    }, (err) => {\r\n\r\n    });\r\n  }\r\n\r\n  showPassword() {\r\n    var x = document.getElementById(\"passwordInput\");\r\n    if (x['type'] === \"password\") {\r\n      x['type'] = \"text\";\r\n    } else {\r\n      x['type'] = \"password\";\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nconst routes: Routes = [\r\n  { path: '', component: EmployeeManagementComponent },\r\n  { path: 'employee', component: EmployeeCreateComponent }\r\n];\r\n@NgModule({\r\n  declarations: [EmployeeManagementComponent, EmployeeCreateComponent],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n]\r\n})\r\nexport class EmployeeManagementModule { }\r\n\r\n","module.exports = \"<div class=\\\"row mt-4 form-group\\\">\\r\\n  <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n    <h4 class=\\\" header-titel\\\">Employee Management</h4>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 col-sm-12 text-right\\\">\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-transparent\\\"> <img src=\\\"./assets/icon/filter.svg\\\"\\r\\n        alt=\\\"Generic placeholder image\\\"></button> -->\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Search\\\" class=\\\"search-field\\\" name=\\\"search\\\" ngModel\\r\\n      (ngModelChange)=\\\"searchFilter($event)\\\">\\r\\n\\r\\n    <button type=\\\"button\\\" routerLink=\\\"/employeeManagement/employee\\\" class=\\\"btn btn-primary\\\">New Employee</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-12 col-xs-12 \\\">\\r\\n    <table class=\\\"table table-borderless app-table table-striped\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th>S.No</th>\\r\\n          <th>Name</th>\\r\\n          <th>Employee ID</th>\\r\\n          <th>Email</th>\\r\\n          <th>Position</th>\\r\\n          <th>Contact number</th>\\r\\n          <th>Branch</th>\\r\\n          <th>Location</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of filterList | paginate: { itemsPerPage: 10, currentPage: p } ; let i = index\\\">\\r\\n          <!-- <tr *ngFor=\\\"let item of courseList; index as i\\\"> -->\\r\\n          <td>{{ 10 * (p - 1) + i +1}}</td>\\r\\n          <td (click)=\\\"viewEmployee(item.id);visitorDetailModal.show()\\\"><a>{{item.fullName}}</a></td>\\r\\n\\r\\n          <td>{{item.employeeId}}</td>\\r\\n          <td>{{item?.email}}</td>\\r\\n          <td>{{item?.positionId.name}}</td>\\r\\n          <td>{{item?.phoneNumber}}</td>\\r\\n          <td>\\r\\n            <ng-container *ngIf=\\\"item?.branchAllocation != '' && item?.branchAllocation != null\\\">\\r\\n              {{item?.branchAllocation.branchName}}</ng-container>\\r\\n          </td>\\r\\n          <td>\\r\\n            <ng-container *ngIf=\\\"item?.branchAllocation != '' && item?.branchAllocation != null\\\">\\r\\n              {{item?.branchAllocation.location}}</ng-container>\\r\\n          </td>\\r\\n          <td>\\r\\n            <div class=\\\"btn-group edit-button\\\" dropdown>\\r\\n              <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\" bg-transparent border-0\\\"\\r\\n                aria-controls=\\\"dropdown-basic\\\">\\r\\n                <span class=\\\"material-icons\\\">\\r\\n                  more_horiz\\r\\n                </span>\\r\\n              </button>\\r\\n              <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu dropdown-menu-right\\\" role=\\\"menu\\\"\\r\\n                aria-labelledby=\\\"button-basic\\\">\\r\\n                <li role=\\\" px-2 cursor\\\" (click)=\\\"editEmployee(item.id)\\\">\\r\\n                  <button class=\\\"bg-transparent border-0\\\">Edit</button>\\r\\n                </li>\\r\\n                <li class=\\\"divider\\\"></li>\\r\\n                <li role=\\\" px-2 cursor\\\" (click)=\\\"deleteEmployee(item.id)\\\">\\r\\n                  <button class=\\\"bg-transparent border-0\\\">Delete</button>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"text-center col-md-12 col-xs-12\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"text-center col-md-12 col-xs-12\\\">\\r\\n        <div *ngIf=\\\"!!loader\\\">\\r\\n          <div class=\\\"spinner-box my-0 mx-auto\\\">\\r\\n            <div class=\\\"pulse-container\\\">\\r\\n              <div class=\\\"pulse-bubble pulse-bubble-1\\\"></div>\\r\\n              <div class=\\\"pulse-bubble pulse-bubble-2\\\"></div>\\r\\n              <div class=\\\"pulse-bubble pulse-bubble-3\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <p class=\\\"text-loader text-bold\\\">Loading</p>\\r\\n        </div>\\r\\n        <h4 *ngIf=\\\"filterList?.length==0\\\" class=\\\"p-5 text-dark text-center\\\">No data to display</h4>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 col-xs-12\\\">\\r\\n    <label class=\\\"fs14\\\">Showing {{10 * (p - 1) + i }} to {{10 * p}} of {{filterList?.length}} entries</label>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-6 col-xs-12 text-right\\\" *ngIf=\\\"filterList?.length !==0\\\">\\r\\n    <pagination-controls (pageChange)=\\\"p = $event\\\" responsive=\\\"true\\\" previousLabel=\\\"Previous\\\" nextLabel=\\\"Next\\\">\\r\\n    </pagination-controls>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade user-detai\\\" bsModal #visitorDetailModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\" tabindex=\\\"-1\\\"\\r\\n  role=\\\"dialog\\\" aria-labelledby=\\\"dialog-static-name\\\">\\r\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"visitorDetailModal.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\" class=\\\"x\\\">&times;</span>\\r\\n      </button>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"shadow-sm card border-0\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 col-xs-12\\\">\\r\\n                <div class=\\\"media\\\">\\r\\n                  <!-- <img src=\\\"/assets/images/user.jpg\\\"\\r\\n                  alt=\\\"Generic placeholder image\\\" *ngIf=\\\"employeeloginData?.profilePicture == ''\\\" />\\r\\n                  <img [src]=\\\"employeeloginData?.profilePicture\\\" class=\\\"image-size\\\" *ngIf=\\\"employeeloginData.profilePicture != ''\\\" /> -->\\r\\n\\r\\n                  <!-- <div class=\\\"media-body\\\">\\r\\n                    <h5 class=\\\"mt-0\\\">{{viewEmployeeData?.fullName}}</h5>\\r\\n\\r\\n                    <label class=\\\"detals\\\">{{viewEmployeeData?.email}}</label>\\r\\n                    <label class=\\\"detals\\\">{{viewEmployeeData?.phoneNumber}}</label>\\r\\n                    <label class=\\\"detals\\\">{{viewEmployeeData?.citizenShip}}</label>\\r\\n                  </div> -->\\r\\n                </div>\\r\\n                <h5>View User</h5>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 col-xs-12 text-right\\\">\\r\\n                <button class=\\\"btn btn-sm btn-primary\\\" type=\\\"button\\\" (click)=\\\"resetPassword(viewEmployeeData?.id)\\\">Reset Password</button>\\r\\n                <h4 class=\\\"mt-4 mb-0 px-4 edit\\\" (click)=\\\"editEmployee(viewEmployeeData.id)\\\">Edit</h4>\\r\\n                <!-- <h5 class=\\\"mt-0  mb-0 days-ago\\\">{{viewEmployeeData.lastActivityDate}} days ago</h5> -->\\r\\n              </div>\\r\\n              <div class=\\\"col-md-12 col-xs-12\\\">\\r\\n                <hr>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                <!-- <p>Login ID: {{viewEmployeeData?.id}}</p>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Subscription ID:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.subscriptionId}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Employee ID:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.employeeId}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Race ID:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.RaceId}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>DOB :</p><span class=\\\"px-2\\\">{{viewEmployeeData?.dob | slice:0:10}}</span>\\r\\n                </div> -->\\r\\n                <p>User Name: {{viewEmployeeData?.fullName}}</p>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Last Name:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.lastName}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>First Name :</p><span class=\\\"px-2\\\">{{viewEmployeeData?.firstName}}</span>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"d-flex\\\"><p>IsBumi :</p><span class=\\\"px-2\\\">Lorem Ipsum</span></div> -->\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Status:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.userstatus == true?'Active':'Inactive'}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Role:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.role}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Email:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.email}}</span>\\r\\n                </div>\\r\\n                <!-- <p>Password: {{viewEmployeeData.id}}</p> -->\\r\\n                <!-- <div class=\\\"d-flex\\\">\\r\\n                  <p>Gender</p><span class=\\\"px-2\\\">\\r\\n                    <ng-container *ngIf=\\\"viewEmployeeData?.gender == '1'\\\">Male</ng-container>\\r\\n                    <ng-container *ngIf=\\\"viewEmployeeData?.gender == '2'\\\">Female</ng-container>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Religion CId:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.ReligionCId}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Branch:</p><span class=\\\"px-2\\\"\\r\\n                    *ngIf=\\\"viewEmployeeData?.branchAllocation != '' || viewEmployeeData?.branchAllocation != 'null'\\\">{{viewEmployeeData?.branchAllocation.branchName}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Role of the employee:</p><span class=\\\"px-2\\\">{{viewEmployeeData?.role}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                  <p>Location:</p><span class=\\\"px-2\\\"\\r\\n                    *ngIf=\\\"viewEmployeeData?.branchAllocation != '' || viewEmployeeData?.branchAllocation != 'null'\\\">{{viewEmployeeData?.branchAllocation.location}}</span>\\r\\n                </div> -->\\r\\n\\r\\n                <!-- <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"\\\">Lock user</label>\\r\\n                  <label class=\\\"switch\\\">\\r\\n                    <input type=\\\"checkbox\\\">\\r\\n                    <span class=\\\"slider round\\\"></span>\\r\\n                  </label>\\r\\n\\r\\n                </div> -->\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <fieldset>\\r\\n              <h6>Data Information</h6>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                  <p>Created By: {{viewEmployeeData?.createdBy}} {{viewEmployeeData?.createdAt | date:'short'}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n                  <p>Updated By: {{viewEmployeeData?.modifiedBy}} {{viewEmployeeData?.updatedAt | date:'short'}}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </fieldset>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"text-right py-3 \\\">\\r\\n          <!-- <button class=\\\"btn btn-primary px-4 py-2\\\">Save the Changes</button> -->\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"@import url(\\\"https://fonts.googleapis.com/css?family=Poppins&display=swap\\\");\\n@import url(\\\"https://fonts.googleapis.com/css?family=Merriweather:300,400,500i,700,900&display=swap\\\");\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 51px;\\n  height: 32px; }\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 30px;\\n  width: 30px;\\n  box-shadow: 0px 5px 6px rgba(0, 0, 0, 0.135216);\\n  left: 0px;\\n  bottom: 0px;\\n  background-color: white;\\n  transition: .4s; }\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  box-shadow: inset 5px -1px 5px rgba(0, 0, 0, 0.135216);\\n  border: 1px solid #f3e4e447;\\n  background-color: #fff;\\n  transition: .4s; }\\n.switch input:checked + .slider {\\n  background-color: #3B3984; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcm91dGVzL2VtcGxveWVlLW1hbmFnZW1lbnQvZW1wbG95ZWUtbWFuYWdlbWVudC9FOlxcZnJvbnRlbmRfYWdpbGVlZGdlX2hxX2Ntcy9zcmNcXGFwcFxcc2hhcmVkXFxzdHlsZXNcXGFic3RyYWN0c1xcZm9udHMuc2NzcyIsInNyYy9hcHAvcm91dGVzL2VtcGxveWVlLW1hbmFnZW1lbnQvZW1wbG95ZWUtbWFuYWdlbWVudC9FOlxcZnJvbnRlbmRfYWdpbGVlZGdlX2hxX2Ntcy9zcmNcXGFwcFxccm91dGVzXFxlbXBsb3llZS1tYW5hZ2VtZW50XFxlbXBsb3llZS1tYW5hZ2VtZW50XFxlbXBsb3llZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLDJFQUFZO0FBRVoscUdBQVk7QUNDWjtFQUNJLGtCQUFrQjtFQUNsQixxQkFBcUI7RUFDckIsV0FBVztFQUNYLFlBQVksRUFBQTtBQUVoQjtFQUNJLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCwrQ0FBK0M7RUFDL0MsU0FBUztFQUNULFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsZUFBZSxFQUFBO0FBRW5CO0VBQ0ksa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1Qsc0RBQXNEO0VBQ3RELDJCQUEyQjtFQUMzQixzQkFBc0I7RUFDdEIsZUFBZSxFQUFBO0FBRW5CO0VBQ0kseUJBQXdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9yb3V0ZXMvZW1wbG95ZWUtbWFuYWdlbWVudC9lbXBsb3llZS1tYW5hZ2VtZW50L2VtcGxveWVlLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qb3BwaW5zJmRpc3BsYXk9c3dhcCcpO1xyXG5cclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1NZXJyaXdlYXRoZXI6MzAwLDQwMCw1MDBpLDcwMCw5MDAmZGlzcGxheT1zd2FwJyk7IiwiQGltcG9ydCcuLi8uLi8uLi9zaGFyZWQvc3R5bGVzL2Fic3RyYWN0cy9hYnN0cmFjdHMtZGlyLnNjc3MnO1xyXG5cclxuXHJcblxyXG4uc3dpdGNoIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiA1MXB4O1xyXG4gICAgaGVpZ2h0OiAzMnB4O1xyXG59XHJcbi5zbGlkZXI6YmVmb3JlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCA1cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xMzUyMTYpO1xyXG4gICAgbGVmdDogMHB4O1xyXG4gICAgYm90dG9tOiAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIHRyYW5zaXRpb246IC40cztcclxufVxyXG4uc2xpZGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDVweCAtMXB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTM1MjE2KTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmM2U0ZTQ0NztcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICB0cmFuc2l0aW9uOiAuNHM7XHJcbn1cclxuLnN3aXRjaCBpbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiMzQjM5ODQ7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormArray, Validators, NgForm } from '@angular/forms';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { Router } from '@angular/router';\r\nimport { RemoteApiService } from '../../../core/services/remote-service/remote-api.service';\r\nimport { AppConstants } from '../../../core/constants/AppConstants';\r\nimport { ApiUrlConstants } from '../../../core/constants/apiUrlConstants';\r\nimport { AppService } from '../../../core/services/app/app.service';\r\nimport { Request } from '../../../core/services/remote-service/reqResObj/Request';\r\n\r\n@Component({\r\n  selector: 'app-employee-management',\r\n  templateUrl: './employee-management.component.html',\r\n  styleUrls: ['./employee-management.component.scss']\r\n})\r\nexport class EmployeeManagementComponent implements OnInit {\r\n  public employeeData: any;\r\n  public itemid: any;\r\n  public filterList: any;\r\n  p: number = 1;\r\n  public loader: any = true;\r\n  public i1state: any = true;\r\n  public i2state: any = false;\r\n  public i3state: any = false;\r\n  public i = 1;\r\n  public i1: any = this.i;\r\n  public i2: any = this.i1 + 1;\r\n  public i3: any = this.i2 + 1;\r\n  public viewEmployeeData: any;\r\n  employeeloginData: any;\r\n  pageSize: number = 10;\r\n  constructor(\r\n    private router: Router,\r\n    public request: Request,\r\n    public api: RemoteApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getloginEmployee(); this.getEmployee()\r\n  }\r\n  getEmployee() {\r\n    // console.log(data,\"FormData\")\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.GET_ALL_EMPLOYEE;\r\n    this.request.params = \"\"\r\n    this.api.requestObject(this.request).then(data => {\r\n      this.loader = false;\r\n      this.employeeData = data;\r\n      this.filterList = this.employeeData;\r\n      this.employeeloginData = data.find(empDetails => empDetails.id == localStorage.getItem('userId'));\r\n\r\n      console.log(this.employeeData, \"DATAEMPLOYEE\")\r\n      // this.router.navigate(['/employeeManagement']);\r\n\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n\r\n  }\r\n  getToday(): string {\r\n    return new Date().toISOString().split('T')[0]\r\n  }\r\n  numberOnly(event): boolean {\r\n    const charCode = (event.which) ? event.which : event.keyCode;\r\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n      return false;\r\n    }\r\n    return true;\r\n\r\n  }\r\n  getloginEmployee() {\r\n    // console.log(data,\"FormData\")\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_GET;\r\n    this.request.reqModule = ApiUrlConstants.GET_ALL_EMPLOYEE;\r\n    this.request.params = \"\"\r\n    this.api.requestObject(this.request).then(result => {\r\n      this.loader = false;\r\n      this.employeeData = result;\r\n      this.filterList = result;\r\n      this.employeeloginData = result.find(empDetails => empDetails.id == localStorage.getItem('userId'));\r\n\r\n      console.log(this.employeeData, \"DATAEMPLOYEE\")\r\n      // this.router.navigate(['/employeeManagement']);\r\n\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n\r\n  }\r\n  viewEmployee(id) {\r\n    this.getEmployee();\r\n    this.itemid = id;\r\n    this.employeeData.map((data) => {\r\n      if (id == data['id']) {\r\n        // data['profilePicture'] = './assert/' + data['profilePicture'];\r\n        this.viewEmployeeData = data;\r\n\r\n        // this.viewEmployeeData.profilePicture = './assets/images/' + data['profilePicture'];\r\n        console.log(this.viewEmployeeData, \"ViewEmployee\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  editEmployee(itemid) {\r\n\r\n    this.itemid = itemid;\r\n    console.log(this.itemid, \"EditID\")\r\n    let id = this.itemid;\r\n\r\n    this.router.navigate(['/employeeManagement/employee'], { queryParams: { id: this.itemid } });\r\n\r\n  }\r\n  searchFilter(text: any) {\r\n    this.filterList = this.employeeData.filter(result =>\r\n      JSON.stringify(result.fullName).toLocaleLowerCase().includes(text.toLocaleLowerCase()) ||\r\n      JSON.stringify(result.employeeId).toLocaleLowerCase().includes(text.toLocaleLowerCase()) ||\r\n      JSON.stringify(result.email).toLocaleLowerCase().includes(text.toLocaleLowerCase()) ||\r\n      JSON.stringify(result.positionId).toLocaleLowerCase().includes(text.toLocaleLowerCase()) ||\r\n      JSON.stringify(result.phoneNumber).toLocaleLowerCase().includes(text.toLocaleLowerCase()) ||\r\n      JSON.stringify(result).toLocaleLowerCase().includes(text.toLocaleLowerCase())\r\n    );\r\n\r\n  }\r\n  deleteEmployee(itemid) {\r\n    let data = {\r\n      userstatus: false\r\n    }\r\n    this.request.url = AppConstants.SERVER_URI_OBJECT['core'];\r\n    this.request.type = AppConstants.API_POST;\r\n    this.request.reqModule = ApiUrlConstants.Update_EMPLOYEE;\r\n    this.request.params = itemid\r\n    this.request.body = data;\r\n    this.api.requestObject(this.request).then(data => {\r\n      console.log(data, \"dataLogin\")\r\n      this.getEmployee();\r\n\r\n      // this.router.navigate(['/employeeManagement']);\r\n    }, (err) => {\r\n      // this.alert.stickyAlerShow(AppConstants.SERVER_ERR, 'alert-danger');\r\n      // this.errLogin = err.error;\r\n    });\r\n  }\r\n\r\n  resetPassword(data) {\r\n    this.router.navigate(['login/resetPassword/' + data]);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}